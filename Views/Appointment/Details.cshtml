@model HospitalManagementSystem.DTOs.AppointmentDto

@{
    ViewData["Title"] = "Randevu Detayları";
}

<div class="enb-root center-page-wrapper" data-global-enabiz>
    <div class="enb-apt-wrapper fade-in">
        <div class="enb-apt-header">
            <div class="enb-apt-header-left">
                <div class="enb-apt-icon"><i class="fas fa-calendar-check"></i></div>
                <div class="enb-apt-title">
                    <h1>Randevu Detayı</h1>
                    <div class="enb-breadcrumb">
                        <a href="@Url.Action("Index","Dashboard")">Dashboard</a><span>/</span>
                        <a href="@Url.Action("Index","Appointment")">Randevular</a><span>/</span>
                        <span>Detay</span>
                    </div>
                </div>
            </div>
            <div class="enb-apt-actions">
                <a class="enb-btn ghost" href="@Url.Action("Index","Appointment")"><i class="fas fa-arrow-left"></i><span>Geri</span></a>
                <a class="enb-btn outline" href="@Url.Action("Edit","Appointment", new { id = Model.Id })"><i class="fas fa-edit"></i><span>Düzenle</span></a>
                <button type="button" class="enb-btn danger" onclick="deleteAppointment('@Model.Id')"><i class="fas fa-trash"></i><span>Sil</span></button>
            </div>
        </div>
        <div class="enb-status-row">
            <div class="enb-chip primary"><i class="fas fa-clock"></i><span>@Model.AppointmentDateTime.ToString("dd.MM.yyyy HH:mm")</span></div>
            <div class="enb-chip @(Model.Status==nameof(AppointmentStatus.Scheduled)?"primary":Model.Status==nameof(AppointmentStatus.Completed)?"accent":Model.Status==nameof(AppointmentStatus.Cancelled)?"danger":"warn")"><i class="fas fa-flag"></i><span>@Model.Status</span></div>
            <div class="enb-chip muted"><i class="fas fa-stethoscope"></i><span>@Model.Type</span></div>
        </div>
        <div class="enb-grid-2">
            <section class="enb-card">
                <h2 class="enb-section-title"><span class="enb-badge-dot"></span>Özet</h2>
                <div class="enb-info-grid">
                    <div class="enb-info-block">
                        <label>Hasta</label>
                        <div class="val"><i class="fas fa-user"></i>@Model.PatientName <span class="text-muted" style="font-weight:500;font-size:.68rem;">(@Model.PatientTc)</span></div>
                    </div>
                    <div class="enb-info-block">
                        <label>Doktor</label>
                        <div class="val"><i class="fas fa-user-md"></i>@Model.DoctorName</div>
                    </div>
                    <div class="enb-info-block">
                        <label>Tarih</label>
                        <div class="val"><i class="fas fa-calendar-day"></i>@Model.AppointmentDateTime.ToString("dd.MM.yyyy")</div>
                    </div>
                    <div class="enb-info-block">
                        <label>Saat</label>
                        <div class="val"><i class="fas fa-clock"></i>@Model.AppointmentDateTime.ToString("HH:mm")</div>
                    </div>
                    <div class="enb-info-block">
                        <label>Oluşturulma</label>
                        <div class="val"><i class="fas fa-plus-circle"></i>@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</div>
                    </div>
                    <div class="enb-info-block">
                        <label>Güncelleme</label>
                        <div class="val"><i class="fas fa-pen"></i>@(Model.UpdatedAt.HasValue?Model.UpdatedAt.Value.ToString("dd.MM.yyyy HH:mm"):"-")</div>
                    </div>
                </div>
                @if(!string.IsNullOrWhiteSpace(Model.Notes)){
                    <div class="enb-notes mt-3">
                        <label>Notlar</label>
                        <p>@Model.Notes</p>
                    </div>
                }
            </section>
            <aside class="enb-card alt">
                <h3 class="enb-section-title" style="margin-bottom:.6rem;"><span class="enb-badge-dot" style="background:#0ea5e9;box-shadow:0 0 0 3px rgba(14,165,233,.25);"></span>Geçmiş</h3>
                <ul class="enb-mini-timeline">
                    <li><span class="dot success"></span><div class="t-row"><strong>Oluşturuldu</strong><time>@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</time></div></li>
                    @if(Model.UpdatedAt.HasValue && Model.UpdatedAt>Model.CreatedAt){<li><span class="dot warn"></span><div class="t-row"><strong>Güncellendi</strong><time>@Model.UpdatedAt.Value.ToString("dd.MM.yyyy HH:mm")</time></div></li>}
                    <li><span class="dot info"></span><div class="t-row"><strong>Görüntülendi</strong><time>@DateTime.Now.ToString("dd.MM.yyyy HH:mm")</time></div></li>
                </ul>
            </aside>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteAppointment(id) {
            if (confirm('Bu randevuyu silmek istediğinize emin misiniz?')) {
                fetch(`/Appointment/Delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        window.location.href = '/Appointment';
                    } else {
                        alert('Randevu silinirken bir hata oluştu.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu.');
                });
            }
        }

        function updateStatus(id, status) {
            if (confirm(`Randevu durumunu ${status} olarak güncellemek istediğinize emin misiniz?`)) {
                fetch(`/Appointment/UpdateStatus/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: status })
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Durum güncellenirken bir hata oluştu.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu.');
                });
            }
        }
    </script>

    <!-- inline stil kaldırıldı, tema dosyası kullanılıyor -->
}
