@model Appointment

@{
    ViewData["Title"] = "Yeni Randevu Oluştur";
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-calendar-plus text-primary"></i>
                        Yeni Randevu Oluştur
                    </h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Appointment")">Randevular</a></li>
                            <li class="breadcrumb-item active">Yeni Randevu</li>
                        </ol>
                    </nav>
                </div>
                <a href="@Url.Action("Index", "Appointment")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Geri Dön
                </a>
            </div>

            <!-- Appointment Form -->
            <div class="card shadow-sm">
                <div class="card-header bg-gradient-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Randevu Bilgileri
                    </h5>
                </div>
                
                <div class="card-body">
                    <form asp-action="Create" method="post" id="appointmentForm">
                        <div class="row">
                            <!-- Patient and Doctor Selection -->
                            <div class="col-md-6">
                                <div class="form-section mb-4">
                                    <h6 class="text-primary mb-3">
                                        <i class="fas fa-users"></i> Hasta ve Doktor Seçimi
                                    </h6>
                                    
                                    <div class="mb-3">
                                        <label class="form-label fw-semibold">TC Kimlik No ile Hasta Bul</label>
                                        <div class="input-group mb-2">
                                            <span class="input-group-text"><i class="fas fa-id-card"></i></span>
                                            <input type="text" maxlength="11" class="form-control" id="tcLookupInput" placeholder="TC Kimlik No" />
                                            <button type="button" class="btn btn-outline-primary" id="tcLookupBtn">Ara</button>
                                        </div>
                                        <div id="tcLookupFeedback" class="small"></div>
                                        <div id="tcPatientSummary" class="alert alert-info py-2 px-3 mt-2 d-none">
                                            <strong>Hasta:</strong> <span id="tcPatientName"></span> | <strong>Yaş:</strong> <span id="tcPatientAge"></span> | <span id="tcPatientGender"></span><br />
                                            <i class="fas fa-phone"></i> <span id="tcPatientPhone"></span> &nbsp; <i class="fas fa-envelope"></i> <span id="tcPatientEmail"></span>
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="PatientId" class="form-label fw-semibold">Hasta *</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-user"></i></span>
                                            <select asp-for="PatientId" class="form-select" id="PatientId">
                                                <option value="">Hasta seçiniz</option>
                                                @if (ViewBag.Patients != null)
                                                {
                                                    @foreach (var patient in ViewBag.Patients as IEnumerable<dynamic>)
                                                    {
                                                        <option value="@patient.Id">@patient.FullName - @patient.Email</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <span asp-validation-for="PatientId" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="DoctorId" class="form-label fw-semibold">Doktor *</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-user-md"></i></span>
                                            <select asp-for="DoctorId" class="form-select" id="DoctorId">
                                                <option value="">Doktor seçiniz</option>
                                                @if (ViewBag.Doctors != null)
                                                {
                                                    @foreach (var doctor in ViewBag.Doctors as IEnumerable<dynamic>)
                                                    {
                                                        <option value="@doctor.Id">Dr. @doctor.Name</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <span asp-validation-for="DoctorId" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Type" class="form-label fw-semibold">Randevu Türü *</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-stethoscope"></i></span>
                                            <select asp-for="Type" class="form-select">
                                                <option value="">Randevu türü seçiniz</option>
                                                <option value="Muayene">Muayene</option>
                                                <option value="Kontrol">Kontrol</option>
                                                <option value="Acil">Acil</option>
                                                <option value="Ameliyat">Ameliyat</option>
                                                <option value="İnceleme">İnceleme</option>
                                                <option value="CheckUp">CheckUp</option>
                                                <option value="Tedavi">Tedavi</option>
                                            </select>
                                        </div>
                                        <span asp-validation-for="Type" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Department" class="form-label fw-semibold">Departman</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-building"></i></span>
                                            <select asp-for="Department" class="form-select" id="Department">
                                                <option value="">Departman seçiniz</option>
                                                @if (ViewBag.Departments != null)
                                                {
                                                    @foreach (var dept in ViewBag.Departments as IEnumerable<dynamic>)
                                                    {
                                                        <option value="@dept.Name">@dept.Name</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <span asp-validation-for="Department" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Date and Status -->
                            <div class="col-md-6">
                                <div class="form-section mb-4">
                                    <h6 class="text-primary mb-3">
                                        <i class="fas fa-calendar"></i> Tarih ve Durum
                                    </h6>

                                    <div class="mb-3">
                                        <label class="form-label fw-semibold">Randevu Tarihi *</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                                            <input id="appointmentDate" class="form-control" type="date" />
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label fw-semibold">Randevu Saati *</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                            <select id="appointmentTime" class="form-select">
                                                <option value="">Saat seçiniz</option>
                                                <option value="08:00">08:00</option>
                                                <option value="08:30">08:30</option>
                                                <option value="09:00">09:00</option>
                                                <option value="09:30">09:30</option>
                                                <option value="10:00">10:00</option>
                                                <option value="10:30">10:30</option>
                                                <option value="11:00">11:00</option>
                                                <option value="11:30">11:30</option>
                                                <option value="12:00">12:00</option>
                                                <option value="12:30">12:30</option>
                                                <option value="13:00">13:00</option>
                                                <option value="13:30">13:30</option>
                                                <option value="14:00">14:00</option>
                                                <option value="14:30">14:30</option>
                                                <option value="15:00">15:00</option>
                                                <option value="15:30">15:30</option>
                                                <option value="16:00">16:00</option>
                                                <option value="16:30">16:30</option>
                                                <option value="17:00">17:00</option>
                                                <option value="17:30">17:30</option>
                                            </select>
                                        </div>
                                    </div>

                                    <!-- Hidden field for actual AppointmentDate -->
                                    <input asp-for="AppointmentDate" type="hidden" id="hiddenAppointmentDate" />
                                    <span asp-validation-for="AppointmentDate" class="text-danger"></span>

                                    <div class="mb-3">
                                        <label asp-for="Status" class="form-label fw-semibold">Durum</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="fas fa-flag"></i></span>
                                            <select asp-for="Status" class="form-select">
                                                <option value="">Durum seçiniz</option>
                                                <option value="Planlandı">Planlandı</option>
                                                <option value="Onaylandı">Onaylandı</option>
                                                <option value="DevamEdiyor">Devam Ediyor</option>
                                                <option value="Tamamlandı">Tamamlandı</option>
                                                <option value="İptalEdildi">İptal Edildi</option>
                                                <option value="Gelmedi">Gelmedi</option>
                                            </select>
                                        </div>
                                        <span asp-validation-for="Status" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Notes" class="form-label fw-semibold">Notlar</label>
                                        <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Randevu ile ilgili notlarınızı yazabilirsiniz..."></textarea>
                                        <span asp-validation-for="Notes" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Quick Actions -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <h6 class="card-title">
                                            <i class="fas fa-bolt text-warning"></i> Hızlı Randevu Seçenekleri
                                        </h6>
                                        <div class="row g-2">
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-outline-primary btn-sm w-100" onclick="setQuickAppointment('today')">
                                                    <i class="fas fa-calendar-day"></i> Bugün
                                                </button>
                                            </div>
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-outline-success btn-sm w-100" onclick="setQuickAppointment('tomorrow')">
                                                    <i class="fas fa-calendar-plus"></i> Yarın
                                                </button>
                                            </div>
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-outline-info btn-sm w-100" onclick="setQuickAppointment('nextweek')">
                                                    <i class="fas fa-calendar-week"></i> Gelecek Hafta
                                                </button>
                                            </div>
                                            <div class="col-md-3">
                                                <button type="button" class="btn btn-outline-warning btn-sm w-100" onclick="setQuickAppointment('emergency')">
                                                    <i class="fas fa-exclamation-triangle"></i> Acil
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-between pt-3 border-top">
                            <a href="@Url.Action("Index", "Appointment")" class="btn btn-secondary">
                                <i class="fas fa-times"></i> İptal
                            </a>
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                <i class="fas fa-save"></i> Randevu Oluştur
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set default status to Planlandı
            const statusSelect = document.getElementById('Status');
            if (statusSelect) {
                statusSelect.value = 'Planlandı';
            }
            // TC lookup events
            const tcInput = document.getElementById('tcLookupInput');
            const tcBtn = document.getElementById('tcLookupBtn');
            if (tcInput && tcBtn) {
                tcBtn.addEventListener('click', lookupPatientByTc);
                tcInput.addEventListener('keyup', function(e){
                    // Enter ile arama
                    if(e.key === 'Enter') lookupPatientByTc();
                    // 11 haneye ulaşınca otomatik ara
                    if(this.value.replace(/[^0-9]/g,'').length === 11) {
                        lookupPatientByTc();
                    }
                });
            }
            
            // Set minimum date to today
            const appointmentDateInput = document.getElementById('appointmentDate');
            const now = new Date();
            const today = now.toISOString().slice(0, 10);
            appointmentDateInput.min = today;
            appointmentDateInput.value = today;
            
            // Combine date and time when form is submitted
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const dateInput = document.getElementById('appointmentDate');
                const timeInput = document.getElementById('appointmentTime');
                const hiddenInput = document.getElementById('hiddenAppointmentDate');
                
                if (dateInput.value && timeInput.value) {
                    const combinedDateTime = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                    hiddenInput.value = combinedDateTime.toISOString().slice(0, 19);
                } else {
                    e.preventDefault();
                    alert('Lütfen tarih ve saat seçiniz.');
                    return false;
                }
            });
            
            // Update combined date when inputs change
            function updateCombinedDate() {
                const dateInput = document.getElementById('appointmentDate');
                const timeInput = document.getElementById('appointmentTime');
                const hiddenInput = document.getElementById('hiddenAppointmentDate');
                
                if (dateInput.value && timeInput.value) {
                    const combinedDateTime = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                    hiddenInput.value = combinedDateTime.toISOString().slice(0, 19);
                }
            }
            
            document.getElementById('appointmentDate').addEventListener('change', function() {
                updateCombinedDate();
                checkAvailableTimeSlots();
            });
            document.getElementById('appointmentTime').addEventListener('change', updateCombinedDate);
            
            // Doktor değiştiğinde de kontrol et
            document.getElementById('DoctorId').addEventListener('change', checkAvailableTimeSlots);
        });

        // Dolu saatleri kontrol et ve saat dropdown'unu güncelle
        async function checkAvailableTimeSlots() {
            const doctorSelect = document.getElementById('DoctorId');
            const dateInput = document.getElementById('appointmentDate');
            const timeSelect = document.getElementById('appointmentTime');
            
            if (!doctorSelect.value || !dateInput.value) {
                return;
            }
            
            try {
                const response = await fetch(`/Appointment/GetAvailableTimeSlots?doctorId=${doctorSelect.value}&date=${dateInput.value}`);
                const data = await response.json();
                
                if (data.success) {
                    // Tüm option'ları temizle ve yeniden oluştur
                    timeSelect.innerHTML = '<option value="">Saat seçiniz</option>';
                    
                    const allTimeSlots = [
                        "08:00", "08:30", "09:00", "09:30", "10:00", "10:30",
                        "11:00", "11:30", "12:00", "12:30", "13:00", "13:30",
                        "14:00", "14:30", "15:00", "15:30", "16:00", "16:30",
                        "17:00", "17:30"
                    ];
                    
                    allTimeSlots.forEach(time => {
                        const option = document.createElement('option');
                        option.value = time;
                        option.textContent = time;
                        
                        // Eğer saat dolu ise devre dışı bırak ve işaretle
                        if (!data.availableSlots.includes(time)) {
                            option.disabled = true;
                            option.textContent += ' (Dolu)';
                            option.style.color = '#dc3545';
                        }
                        
                        timeSelect.appendChild(option);
                    });
                    
                    // Eğer seçili saat dolu ise temizle
                    if (timeSelect.value && !data.availableSlots.includes(timeSelect.value)) {
                        timeSelect.value = '';
                    }
                } else {
                    console.error('Saat kontrol hatası:', data.message);
                }
            } catch (error) {
                console.error('AJAX hatası:', error);
            }
        }

        function setQuickAppointment(type) {
            const dateInput = document.getElementById('appointmentDate');
            const timeInput = document.getElementById('appointmentTime');
            const now = new Date();
            
            switch(type) {
                case 'today':
                    dateInput.value = now.toISOString().slice(0, 10);
                    timeInput.value = (now.getHours() + 2).toString().padStart(2, '0') + ':00';
                    break;
                case 'tomorrow':
                    now.setDate(now.getDate() + 1);
                    dateInput.value = now.toISOString().slice(0, 10);
                    timeInput.value = '09:00';
                    break;
                case 'nextweek':
                    now.setDate(now.getDate() + 7);
                    dateInput.value = now.toISOString().slice(0, 10);
                    timeInput.value = '09:00';
                    break;
                case 'emergency':
                    dateInput.value = now.toISOString().slice(0, 10);
                    timeInput.value = (now.getHours()).toString().padStart(2, '0') + ':30';
                    document.getElementById('Type').value = 'Acil';
                    document.getElementById('Status').value = 'Onaylandı';
                    break;
            }
        }

        async function lookupPatientByTc(){
            const tcInput = document.getElementById('tcLookupInput');
            const feedback = document.getElementById('tcLookupFeedback');
            const summary = document.getElementById('tcPatientSummary');
            const patientSelect = document.getElementById('PatientId');
            const tc = (tcInput.value || '').trim();
            summary.classList.add('d-none');
            feedback.classList.remove('text-danger','text-success');
            if(tc.length !== 11 || !/^\d{11}$/.test(tc)) {
                feedback.textContent = '11 haneli TC giriniz';
                feedback.classList.add('text-danger');
                return;
            }
            feedback.textContent = 'Sorgulanıyor...';
            try {
                const resp = await fetch(`/Patient/LookupByTc?tc=${tc}`);
                const data = await resp.json();
                if(!data.success){
                    feedback.textContent = data.message || 'Hasta bulunamadı';
                    feedback.classList.add('text-danger');
                    return;
                }
                feedback.textContent = 'Hasta bulundu';
                feedback.classList.add('text-success');
                // Bilgileri doldur
                document.getElementById('tcPatientName').textContent = data.data.fullName;
                document.getElementById('tcPatientAge').textContent = data.data.age;
                document.getElementById('tcPatientGender').textContent = data.data.gender;
                document.getElementById('tcPatientPhone').textContent = data.data.phone || '-';
                document.getElementById('tcPatientEmail').textContent = data.data.email || '-';
                summary.classList.remove('d-none');
                // Select içinde yoksa ekle
                if(![...patientSelect.options].some(o=>o.value===data.data.id)){
                    const opt = document.createElement('option');
                    opt.value = data.data.id;
                    opt.textContent = data.data.fullName + (data.data.email ? ' - ' + data.data.email : '');
                    patientSelect.appendChild(opt);
                }
                patientSelect.value = data.data.id;
            } catch(err){
                feedback.textContent = 'Hata: ' + err.message;
                feedback.classList.add('text-danger');
            }
        }
    </script>

    <style>
        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.15);
        }
        
        .input-group-text {
            background-color: #f8f9fa;
            border-color: #ced4da;
        }
        
        .card-header.bg-gradient-primary {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        }
        
        .form-section {
            border-left: 4px solid transparent;
            padding-left: 1rem;
            transition: all 0.3s ease;
        }
        
        .btn {
            transition: all 0.3s ease;
        }
        
        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
    #tcLookupFeedback { min-height:18px; }
    </style>
}
